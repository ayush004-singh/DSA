class Solution {
    public int[][] merge(int[][] intervals) {
        if(intervals.length<=1)
        return intervals;
        Arrays.sort(intervals, Comparator.comparingInt(i -> i[0]));

        ArrayList<int[]> ans = new ArrayList<>();
        int[] newintervals = intervals[0];
        // ans.add(newintervals);
        for (int i = 1; i < intervals.length; i++) {
    if (intervals[i][0] <= newintervals[1]) {
        // Merge with newintervals
        newintervals[1] = Math.max(newintervals[1], intervals[i][1]);
    } else {
        // No overlap, push previous interval
        ans.add(newintervals);
        newintervals = intervals[i];
    }
}
ans.add(newintervals); // Add last interval

         return ans.toArray(new int[ans.size()][]);
    }

   
}
