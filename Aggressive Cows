
class Solution {
    public static int aggressiveCows(int[] stalls, int k) {
        Arrays.sort(stalls);

        int low = 1;
        int high = stalls[stalls.length - 1] - stalls[0];
        int ans = 0;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (canPlaceCows(stalls, k, mid)) {
                ans = mid;     
                low = mid + 1;
            } else {
                high = mid - 1; 
            }
        }

        return ans;
    }

    private static boolean canPlaceCows(int[] stalls, int k, int dist) {
        int count = 1;       
        int lastPos = stalls[0];

        for (int i = 1; i < stalls.length; i++) {
            if (stalls[i] - lastPos >= dist) {
                count++;
                lastPos = stalls[i];
            }
            if (count >= k) return true;
        }
        return false;
    }
}

public class main{
    public static void main(String arge[]){
        Solution sl = new Solution();
        int arr[] = {2,5,9,24};
        int k =3;
        System.out.println(sl.aggressiveCows(arr,k));
    }
}
